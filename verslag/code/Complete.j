; Jasmin JBC assembler code generated by AliaCodeGenerator
.class public Complete
.super java/lang/Object
.field private static in Ljava/io/BufferedReader;

.method static public <clinit>()V
  .limit stack 5
  new java/io/BufferedReader
  dup
  new java/io/InputStreamReader
  dup
  getstatic java/lang/System/in Ljava/io/InputStream;
  invokespecial java/io/InputStreamReader/<init>(Ljava/io/InputStream;)V
  invokespecial java/io/BufferedReader/<init>(Ljava/io/Reader;)V
  putstatic Complete/in Ljava/io/BufferedReader;
  return
.end method

.method public <init>()V
   aload_0
   invokenonvirtual java/lang/Object/<init>()V
   return
.end method

.method public static main([Ljava/lang/String;)V
   .limit stack 7
   .limit locals 8
   
   iconst_0
   istore 2 ; store value into ivar2
   iload 2 ; put value on the stack
   istore 3 ; store value into ivar1
   iload 3 ; put value on the stack
   pop
   getstatic Complete/in Ljava/io/BufferedReader;
   invokevirtual java/io/BufferedReader/readLine()Ljava/lang/String;
   invokestatic java/lang/Integer/parseInt(Ljava/lang/String;)I

   istore_1
   iload_1
   istore 3 ; store value
   getstatic Complete/in Ljava/io/BufferedReader;
   invokevirtual java/io/BufferedReader/readLine()Ljava/lang/String;
   invokestatic java/lang/Integer/parseInt(Ljava/lang/String;)I

   istore 2 ; store value into ivar2
   iload_1 ; repush the value to the stack if it is used again
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 3
   invokevirtual java/io/PrintStream/println(I)V
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 2
   invokevirtual java/io/PrintStream/println(I)V ; add right constant pool reference bytes for println

     ; does nothing, is feature
   bipush 16 ; expr1
   iconst_2 ; expr1
   bipush 8
   ineg ; expr2
   imul ; expr2
   iadd
   istore 3 ; store value into ivar1
   iload 3 ; put value on the stack
   istore 2 ; store value into ivar2
   iload 2 ; put value on the stack
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 3
   iload 2
   if_icmplt $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr1
   iconst_1
   iconst_2
   if_icmple $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr2
   iand
   invokevirtual java/io/PrintStream/println(Z)V
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iconst_1 ; expr1
   iconst_2
    ; expr2
   imul
   iload 2 ; expr1
   iload 3 ; expr2
   isub
   if_icmpgt $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1
   invokevirtual java/io/PrintStream/println(Z)V ; add right constant pool reference bytes for println

   iload 3
   getstatic Complete/in Ljava/io/BufferedReader;
   invokevirtual java/io/BufferedReader/readLine()Ljava/lang/String;
   invokestatic java/lang/Integer/parseInt(Ljava/lang/String;)I

   istore_1
   iload_1
   istore 2 ; store value
   iload_1 ; repush the value to the stack if it is used again
   if_icmplt $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr1
   iconst_1
   iconst_2
   if_icmple $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr2
   iand
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 2
   istore_1
   iload_1
   invokevirtual java/io/PrintStream/println(I)V

   iload_1 ; repush the value to the stack if it is used again ; expr1
   iconst_1 ; expr2
   iadd
   istore 2 ; store value into ivar2
   iload 2 ; put value on the stack ; expr1
   iconst_1 ; expr2
   iadd
   istore 2 ; store value into ivar
   iload 2 ; put value on the stack
   pop
   iconst_0 ; Bool
   istore 3 ; store value into bvar
   iload 3 ; put value on the stack
   pop
   getstatic Complete/in Ljava/io/BufferedReader;
   invokevirtual java/io/BufferedReader/readLine()Ljava/lang/String;
   invokestatic java/lang/Boolean/parseBoolean(Ljava/lang/String;)Z
   istore_1
   iload_1
   istore 3 ; store value
   iload_1 ; repush the value to the stack if it is used again
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 3
   istore_1
   iload_1
   invokevirtual java/io/PrintStream/println(Z)V

   iload_1 ; repush the value to the stack if it is used again
   pop
   bipush 12 ; expr1
   iconst_5
    ; expr2
   idiv ; expr1
   iconst_5 ; expr2
   imul ; expr1
   bipush 12 ; expr1
   iconst_5 ; expr2
   irem ; expr2
   iadd
   bipush 12
   if_icmpeq $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr1
   bipush 6
   bipush 6
   if_icmpge $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr2
   iand
   istore 3 ; store value into bvar
   iload 3 ; put value on the stack
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iconst_0 ; Bool   ; if x is 0 make it 1, if x is 1 make it 0
   ifeq $+7 ; Go to iconst_1 if it is false
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; if original was 0, load 1 ; expr1
   iload 3
   iconst_1 ; Bool
   if_icmpeq $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr2
   iand ; expr1
   iconst_1 ; Bool
   iconst_0 ; Bool
   if_icmpne $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr2
   ior
   istore_1
   iload_1
   invokevirtual java/io/PrintStream/println(Z)V

   iload_1 ; repush the value to the stack if it is used again ; expr1
   iconst_1 ; Bool ; expr2
   iand
   istore 3 ; store value into bvar
   iload 3 ; put value on the stack
   pop
   bipush 99 ; Char
   istore 4 ; store value into cvar1
   iload 4 ; put value on the stack
   pop
   getstatic Complete/in Ljava/io/BufferedReader;
   invokevirtual java/io/BufferedReader/readLine()Ljava/lang/String;
   iconst_0
   invokevirtual java/lang/String/charAt(I)C
   istore_1
   iload_1
   istore 4 ; store value
   iload_1 ; repush the value to the stack if it is used again
   pop
   bipush 122 ; Char
   istore 6 ; store value into cvar2
   iload 6 ; put value on the stack
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   bipush 97 ; Char
   invokevirtual java/io/PrintStream/println(C)V
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 4
   bipush 99 ; Char
   if_icmpeq $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr1
   iload 6
   bipush 98 ; Char
   if_icmpne $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; expr2
   iand ; expr1
   iconst_1 ; Bool   ; if x is 0 make it 1, if x is 1 make it 0
   ifeq $+7 ; Go to iconst_1 if it is false
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1 ; if original was 0, load 1 ; expr2
   ior
   invokevirtual java/io/PrintStream/println(Z)V ; add right constant pool reference bytes for println

   bipush 98 ; Char
   istore 4 ; store value into cvar
   iload 4 ; put value on the stack
   pop
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 2
   invokevirtual java/io/PrintStream/println(I)V
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 3
   invokevirtual java/io/PrintStream/println(Z)V ; add right constant pool reference bytes for println
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 4
   invokevirtual java/io/PrintStream/println(C)V ; add right constant pool reference bytes for println

   iconst_0
   istore 5 ; store value into i
   iload 5 ; put value on the stack
   pop
   iconst_0
   istore 6 ; store value into z
   iload 6 ; put value on the stack
   pop
   goto COND4   ; Jump to while condition
   WHILE5:
   getstatic java/lang/System/out Ljava/io/PrintStream;
   iload 5
   istore_1
   iload_1
   invokevirtual java/io/PrintStream/println(I)V

   iload_1 ; repush the value to the stack if it is used again
   pop
     iload 6
     iconst_1
     if_icmpeq $+7 ; Go to iconst_1 if it is true
     iconst_0
     goto $+4 ; Go to the line after iconst_1
     iconst_1
     ifeq ELSE2
     iconst_0
     istore 6 ; store value into z
     iload 6 ; put value on the stack
     goto NEXT3
     ELSE2:
       iload 6
       iconst_1
       ineg
       if_icmpeq $+7 ; Go to iconst_1 if it is true
       iconst_0
       goto $+4 ; Go to the line after iconst_1
       iconst_1
       ifeq ELSE0
       iconst_1
       istore 6 ; store value into z
       iload 6 ; put value on the stack
       goto NEXT1
       ELSE0:
       iconst_1
       ineg
       istore 6 ; store value into z
       iload 6 ; put value on the stack
       pop
       iload 5 ; expr1
       iconst_1
        ; expr2
       iadd
       istore 5 ; store value into i
       iload 5 ; put value on the stack
       NEXT1:
     NEXT3:
   pop
   COND4:
   iconst_5
   istore 7 ; store value into x
   iload 7 ; put value on the stack
   pop
   iload 7
   iload 5
   if_icmpgt $+7 ; Go to iconst_1 if it is true
   iconst_0
   goto $+4 ; Go to the line after iconst_1
   iconst_1   ; Execute condition
   ifne WHILE5    ; Jump to start of inner while statement

   return
.end method